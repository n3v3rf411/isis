ext {
    versions = [:]
    libraries = [:]
}

/**
 * Versions
 */

// Isis version for dependencies whose artifacts are to be pulled instead of compiled
versions.isis = "1.11.0-SNAPSHOT"

// Datanucleus Objectstore
versions.jdo_api = "3.1"
versions.datanucleus_core = "4.1.2"
versions.datanucleus_api_jdo = "4.1.0-release"
versions.datanucleus_jdo_query = "4.0.4"
versions.datanucleus_rdbms = "4.1.2"

versions.datanucleus_jodatime = "4.1.0-release"
versions.datanucleus_maven_plugin = "4.0.1"

versions.shiro = "1.2.3"

versions.slf4j = "1.7.10"
versions.log4j = "1.2.17"

versions.joda_time = "2.3"
versions.guava = "16.0.1"

versions.hamcrest = "1.3"

versions.objenesis = "1.4"
versions.javassist = "3.19.0-GA"
versions.reflections = "0.9.9"

versions.commons_logging = "1.1.2"
versions.commons_cli = "1.2"
versions.commons_httpclient = "3.1"
versions.commons_codec = "1.9"

versions.jackson = "2.5.0"
versions.gson = "2.3.1"

// using 2.3.2 throws strange error about not finding org.hsqldb.jdbcDriver"
versions.hsqldb = "2.3.1"
versions.log4jdbc_remix = "0.2.7"
versions.resteasy_jaxrs = "3.0.11.Final"

versions.jetty = "9.2.11.v20150529"

versions.wicket = "6.20.0"
versions.wicketstuff = "6.20.0"

versions.wicket_webjars = "0.4.7"
versions.wicket_bootstrap = "0.9.13"
versions.wicket_source = "6.0.0.8"

versions.wicket_select2 = "6.20.0"
versions.select2 = "3.5.2"
versions.jquery_ui = "1.11.4"

versions.guice = "3.0"
versions.picocontainer = "2.14.3"

versions.dom4j = "1.6.1"
versions.jdom = "2.0.2"
versions.xstream = "1.4.7"
versions.htmlparser = "2.1"

versions.junit = "4.12"
versions.jmock = "2.6.0"
versions.easymock = "2.5.2"
versions.cucumber = "1.1.5"

versions.geronimo_jsp_2_1_spec = "1.0.1"
versions.geronimo_jta_1_1_spec = "1.1.1"
versions.geronimo_jta_1_0_1B_spec = "1.1.1"
versions.geronimo_servlet_3_0_spec = "1.0"
versions.geronimo_annotation_1_0_spec = "1.1.1"
versions.geronimo_activation_1_1_spec = "1.1"
versions.geronimo_javamail_1_4_spec = "1.7.1"
versions.geronimo_atinject_1_0_spec = "1.0"
versions.geronimo_jcdi_1_0_spec = "1.0"
versions.validation_api = "1.1.0.Final"

/**
 * Libraries
 */
//  unittestsupport
libraries.isis_core_unittestsupport = "org.apache.isis.core:isis-core-unittestsupport:${versions.isis}"
//  not scope=test, because referenced by some sql-tests-common under compile scope

//  applib
libraries.isis_core_applib = project(":core-applib")

//  schema
libraries.isis_core_schema = "org.apache.isis.core:isis-core-schema:${versions.isis}"

//  log4j
libraries.isis_core_log4j = "org.apache.isis.core:isis-core-log4j:${versions.isis}"

//  metamodel
libraries.isis_core_metamodel = project(":core-metamodel")

//  runtime
libraries.isis_core_runtime = "org.apache.isis.core:isis-core-runtime:${versions.isis}"

libraries.isis_core_wrapper = "org.apache.isis.core:isis-core-wrapper:${versions.isis}"

//  webserver
libraries.isis_core_webserver = "org.apache.isis.core:isis-core-webserver:${versions.isis}"

//  specsupport
libraries.isis_core_specsupport = "org.apache.isis.core:isis-core-specsupport:${versions.isis}"

//  integtestsupport
libraries.isis_core_integtestsupport = "org.apache.isis.core:isis-core-integtestsupport:${versions.isis}"

//  Restful Objects viewer
libraries.isis_core_viewer_restfulobjects_applib = "org.apache.isis.core:isis-core-viewer-restfulobjects-applib:${versions.isis}"
libraries.isis_core_viewer_restfulobjects_rendering = "org.apache.isis.core:isis-core-viewer-restfulobjects-rendering:${versions.isis}"
libraries.isis_core_viewer_restfulobjects_server = "org.apache.isis.core:isis-core-viewer-restfulobjects-server:${versions.isis}"

//  security implementation(s)
libraries.isis_core_security = "org.apache.isis.core:isis-core-security:${versions.isis}"
libraries.isis_core_security_shiro = "org.apache.isis.core:isis-core-security-shiro:${versions.isis}"

//  also for benefit of application developers, using scope=import
libraries.isis_viewer_wicket_applib = "org.apache.isis.viewer:isis-viewer-wicket-applib:${versions.isis}"

libraries.isis_viewer_wicket_model = "org.apache.isis.viewer:isis-viewer-wicket-model:${versions.isis}"
libraries.isis_viewer_wicket_ui = "org.apache.isis.viewer:isis-viewer-wicket-ui:${versions.isis}"
libraries.isis_viewer_wicket_impl = "org.apache.isis.viewer:isis-viewer-wicket-impl:${versions.isis}"

//  Maven plugin
//libraries.isis_maven_plugin = "org.apache.isis.tool:isis-maven-plugin:1.11.0-SNAPSHOT"

//  JodaTime
libraries.joda_time = "joda-time:joda-time:${versions.joda_time}"

//  Google Guava (collections and commons)
libraries.guava = "com.google.guava:guava:${versions.guava}"

//  Logging
libraries.slf4j_api = "org.slf4j:slf4j-api:${versions.slf4j}"    
libraries.slf4j_log4j12 = "org.slf4j:slf4j-log4j12:${versions.slf4j}"
libraries.jcl_over_slf4j = "org.slf4j:jcl-over-slf4j:${versions.slf4j}"
libraries.log4j = "log4j:log4j:${versions.log4j}"

// required because resteasy-jaxrs declares as a test dependency
// whereas httpclient4 needs it as a compile dependency
libraries.commons_logging = "commons-logging:commons-logging:${versions.commons_logging}"

//  Apache Commons
libraries.commons_cli = "commons-cli:commons-cli:${versions.commons_cli}"
libraries.commons_httpclient = "commons-httpclient:commons-httpclient:${versions.commons_httpclient}"
libraries.commons_codec = "commons-codec:commons-codec:${versions.commons_codec}"

//  Dependency injection
libraries.guice = "com.google.inject:guice:${versions.guice}"
libraries.picocontainer = "org.picocontainer:picocontainer:${versions.picocontainer}"

//   Reflection/metadata
libraries.reflections = "org.reflections:reflections:${versions.reflections}"

//  Bytecode libraries
libraries.objenesis = "org.objenesis:objenesis:${versions.objenesis}"
libraries.javassist = "org.javassist:javassist:${versions.javassist}"

//  XML libraries
libraries.dom4j = "dom4j:dom4j:${versions.dom4j}"
libraries.jdom = "org.jdom:jdom:${versions.jdom}"
libraries.xstream = "com.thoughtworks.xstream:xstream:${versions.xstream}"

//  JSON libraries
libraries.jackson_core = "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"
libraries.jackson_databind = "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
libraries.jackson_annotations = "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
libraries.gson = "com.google.code.gson:gson:${versions.gson}"

//  HTML
libraries.htmlparser = dependencies.create("org.htmlparser:htmlparser:${versions.htmlparser}") {
    exclude group: 'com.sun', module: 'tools'        
}

//  Databases
libraries.hsqldb = "org.hsqldb:hsqldb:${versions.hsqldb}"

libraries.log4jdbc_remix = "org.lazyluke:log4jdbc-remix:${versions.log4jdbc_remix}"

//  Shiro
libraries.shiro_core = "org.apache.shiro:shiro-core:${versions.shiro}"
libraries.shiro_web = "org.apache.shiro:shiro-web:${versions.shiro}"

//  RestEasy
libraries.resteasy_jaxrs = dependencies.create("org.jboss.resteasy:resteasy-jaxrs:${versions.resteasy_jaxrs}") {
    //  instead use geronimo-servlet_3.0_spec    
    exclude group: 'org.jboss.spec.javax.servlet', module: 'jboss-servlet-api_3.1_spec'    
    //  instead use org.apache.geronimo.specs:geronimo-annotation_1.0_spec    
    exclude group: 'javax.annotation', module: 'jsr250-api'    
    //  org.apache.geronimo.specs:geronimo-activation_1.1_spec    
    exclude group: 'javax.activation', module: 'activation'    
}

libraries.resteasy_jaxb_provider = "org.jboss.resteasy:resteasy-jaxb-provider:${versions.resteasy_jaxrs}"
libraries.resteasy_jackson_provider = "org.jboss.resteasy:resteasy-jackson-provider:${versions.resteasy_jaxrs}"

//  Wicket
// TODO POM
libraries.wicket = "org.apache.wicket:wicket:${versions.wicket}"

libraries.wicket_core = dependencies.create("org.apache.wicket:wicket-core:${versions.wicket}") {
    //  for dependency convergence
    exclude group: 'org.slf4j', module: 'slf4j-api'    
}


libraries.wicket_request = dependencies.create("org.apache.wicket:wicket-request:${versions.wicket}") {    
    //  for dependency convergence
    exclude group: 'org.slf4j', module: 'slf4j-api'
}


libraries.wicket_util = dependencies.create("org.apache.wicket:wicket-util:${versions.wicket}") {    
    //  for dependency convergence
    exclude group: 'org.slf4j', module: 'slf4j-api'    
}


libraries.wicket_extensions = dependencies.create("org.apache.wicket:wicket-extensions:${versions.wicket}") {    
    //  for dependency convergence
    exclude group: 'org.slf4j', module: 'slf4j-api'    
}


libraries.wicket_datetime = dependencies.create("org.apache.wicket:wicket-datetime:${versions.wicket}") {
    //  for dependency convergence
    exclude group: 'org.slf4j', module: 'slf4j-api'        
}


libraries.wicket_auth_roles = dependencies.create("org.apache.wicket:wicket-auth-roles:${versions.wicket}") {    
    //  for dependency convergence
    exclude group: 'org.slf4j', module: 'slf4j-api'
}


libraries.wicket_guice = dependencies.create("org.apache.wicket:wicket-guice:${versions.wicket}") {    
    //  for dependency convergence
    exclude group: 'org.slf4j', module: 'slf4j-api'        
    //  for Java7 compatibility (we don't use the proxying capability of this component)
    exclude group: 'cglib', module: 'cglib'        
}


//  Wicket-Select2
libraries.wicketstuff_select2 = dependencies.create("org.wicketstuff:wicketstuff-select2:${versions.wicket_select2}") {    
    //  for dependency convergence
    exclude group: 'org.apache.wicket', module: 'wicket-core'
}

libraries.select2 = "org.webjars:select2:${versions.select2}"
libraries.jquery_ui = dependencies.create("org.webjars:jquery-ui:${versions.jquery_ui}") {    
    exclude group: 'org.webjars', module: 'jquery'        
}


//  Webjars
libraries.wicket_webjars = dependencies.create("de.agilecoders.wicket.webjars:wicket-webjars:${versions.wicket_webjars}") {    
    // for dependency convergence
    exclude group: 'org.apache.wicket', module: 'wicket-core'        
    exclude group: 'org.apache.wicket', module: 'wicket-request'
}


libraries.wicket_bootstrap_core = dependencies.create("de.agilecoders.wicket:wicket-bootstrap-core:${versions.wicket_bootstrap}") {    
    exclude group: 'org.apache.wicket', module: 'wicket-util'        
    exclude group: 'org.apache.wicket', module: 'wicket-request'        
    exclude group: 'org.apache.wicket', module: 'wicket-core'        
    exclude group: 'org.apache.wicket', module: 'wicket-extensions'    
}

libraries.wicket_bootstrap_extensions = dependencies.create("de.agilecoders.wicket:wicket-bootstrap-extensions:${versions.wicket_bootstrap}") {
    exclude group: 'org.apache.wicket', module: 'wicket-core'    
    exclude group: 'org.apache.wicket', module: 'wicket-util'        
    exclude group: 'org.apache.wicket', module: 'wicket-request'        
    exclude group: 'org.apache.wicket', module: 'wicket-core'        
    exclude group: 'org.apache.wicket', module: 'wicket-extensions'        
    exclude group: 'org.webjars', module: 'bootstrap'        
    exclude group: 'org.webjars', module: 'jquery'
    
    //  exclude unused extensions        
    exclude group: 'org.webjars', module: 'jquerypp'        
    exclude group: 'org.webjars', module: 'jquery-ui'        
    exclude group: 'org.webjars', module: 'typeaheadjs'        
    exclude group: 'org.webjars', module: 'x-editable-bootstrap'        
    exclude group: 'org.webjars', module: 'spin-js'        
    exclude group: 'com.google.javascript', module: 'closure-compiler' 
}

    
libraries.wicket_bootstrap_themes = dependencies.create("de.agilecoders.wicket:wicket-bootstrap-themes:${versions.wicket_bootstrap}") { exclude group: 'org.apache.wicket', module: 'wicket-core'}
libraries.wicket_source = dependencies.create("net.ftlines.wicket-source:wicket-source:${versions.wicket_source}") { exclude group: 'org.apache.wicket', module: 'wicket-core'}
    
//  predicate libraries
libraries.hamcrest_core = "org.hamcrest:hamcrest-core:${versions.hamcrest}"
libraries.hamcrest_library = "org.hamcrest:hamcrest-library:${versions.hamcrest}"

//  Web development
libraries.jetty_all = dependencies.create("org.eclipse.jetty.aggregate:jetty-all:${versions.jetty}") { exclude group: 'org.eclipse.jetty.orbit', module: 'javax.servlet'}

//  Testing libraries (not scope=test because used by isis-core-integtest)
libraries.junit = "junit:junit:${versions.junit}"
libraries.jmock = "org.jmock:jmock:${versions.jmock}"
libraries.jmock_junit4 = dependencies.create("org.jmock:jmock-junit4:${versions.jmock}") { exclude group: 'junit', module: 'junit-dep'} // junit-dep pulls old definitions of core junit types

//  BDD testing
libraries.cucumber_java = "info.cukes:cucumber-java:${versions.cucumber}"
libraries.cucumber_junit = "info.cukes:cucumber-junit:${versions.cucumber}"

//  Testing libraries (scope=test)
libraries.easymock = "org.easymock:easymock:${versions.easymock}"

//  Specs
libraries.geronimo_jsp_2_1_spec = "org.apache.geronimo.specs:geronimo-jsp_2.1_spec:${versions.geronimo_jsp_2_1_spec}"
libraries.geronimo_jta_1_1_spec = "org.apache.geronimo.specs:geronimo-jta_1.1_spec:${versions.geronimo_jta_1_1_spec}"  
libraries.geronimo_jta_1_0_1B_spec = "org.apache.geronimo.specs:geronimo-jta_1.0.1B_spec:${versions.geronimo_jta_1_0_1B_spec}"
libraries.geronimo_servlet_3_0_spec = "org.apache.geronimo.specs:geronimo-servlet_3.0_spec:${versions.geronimo_servlet_3_0_spec}"
libraries.geronimo_annotation_1_0_spec = "org.apache.geronimo.specs:geronimo-annotation_1.0_spec:${versions.geronimo_annotation_1_0_spec}"
libraries.geronimo_activation_1_1_spec = "org.apache.geronimo.specs:geronimo-activation_1.1_spec:${versions.geronimo_activation_1_1_spec}"
libraries.geronimo_javamail_1_4_spec = "org.apache.geronimo.specs:geronimo-javamail_1.4_spec:${versions.geronimo_javamail_1_4_spec}"
libraries.geronimo_atinject_1_0_spec = "org.apache.geronimo.specs:geronimo-atinject_1.0_spec:${versions.geronimo_atinject_1_0_spec}"
libraries.geronimo_jcdi_1_0_spec = "org.apache.geronimo.specs:geronimo-jcdi_1.0_spec:${versions.geronimo_jcdi_1_0_spec}"

//  javax APIs
libraries.validation_api = "javax.validation:validation-api:${versions.validation_api}"

//  DataNucleus
libraries.jdo_api = "javax.jdo:jdo-api:${versions.jdo_api}"
libraries.datanucleus_core = "org.datanucleus:datanucleus-core:${versions.datanucleus_core}"
libraries.datanucleus_api_jdo = "org.datanucleus:datanucleus-api-jdo:${versions.datanucleus_api_jdo}"
libraries.datanucleus_jdo_query = "org.datanucleus:datanucleus-jdo-query:${versions.datanucleus_jdo_query}"
libraries.datanucleus_rdbms = "org.datanucleus:datanucleus-rdbms:${versions.datanucleus_rdbms}"
libraries.datanucleus_jodatime = "org.datanucleus:datanucleus-jodatime:${versions.datanucleus_jodatime}"